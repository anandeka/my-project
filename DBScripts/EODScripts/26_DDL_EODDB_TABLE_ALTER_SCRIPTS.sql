SET DEFINE OFF;

DROP TABLE INVM_COG;
DROP TABLE INVM_COGS;
CREATE TABLE INVM_COG(
PROCESS_ID VARCHAR2(15),
INTERNAL_GRD_REF_NO VARCHAR2(15),
MATERIAL_COST_PER_UNIT NUMBER (20,8),
SECONDARY_COST_PER_UNIT NUMBER (20,8),
PRODUCT_PREMIUM_PER_UNIT NUMBER (20,8),
QUALITY_PREMIUM_PER_UNIT NUMBER (20,8),
TOTAL_MC_CHARGES NUMBER (20,8),
TOTAL_TC_CHARGES NUMBER (20,8),
TOTAL_RC_CHARGES NUMBER (20,8),
TOTAL_PC_CHARGES NUMBER (20,8),
TOTAL_SC_CHARGES NUMBER (20,8),
PRICE_TO_BASE_FW_EXCH_RATE_ACT NUMBER(20,10),    
PRICE_TO_BASE_FW_EXCH_RATE VARCHAR2(25),    
CONTRACT_QP_FW_EXCH_RATE  VARCHAR2(25),        
CONTRACT_PP_FW_EXCH_RATE  VARCHAR2(25),        
TC_TO_BASE_FW_EXCH_RATE  VARCHAR2(25),        
RC_TO_BASE_FW_EXCH_RATE  VARCHAR2(25),        
PC_TO_BASE_FW_EXCH_RATE  VARCHAR2(25),        
ACCRUAL_TO_BASE_FW_EXCH_RATE  VARCHAR2(50),
PRICE_UNIT_ID VARCHAR2(15),
PRICE_UNIT_CUR_ID VARCHAR2(15),
PRICE_UNIT_CUR_CODE VARCHAR2(30),
PRICE_UNIT_WEIGHT_UNIT_ID VARCHAR2(15),
PRICE_UNIT_WEIGHT_UNIT VARCHAR2(15),
PRICE_UNIT_WEIGHT NUMBER);
        
CREATE TABLE INVM_COGS(
PROCESS_ID VARCHAR2(15),
SALES_INTERNAL_GMR_REF_NO   VARCHAR2(15),
INTERNAL_GRD_REF_NO VARCHAR2(15),
MATERIAL_COST_PER_UNIT NUMBER (20,8),
SECONDARY_COST_PER_UNIT NUMBER (20,8),
PRODUCT_PREMIUM_PER_UNIT NUMBER (20,8),
QUALITY_PREMIUM_PER_UNIT NUMBER (20,8),
TOTAL_MC_CHARGES NUMBER (20,8),
TOTAL_TC_CHARGES NUMBER (20,8),
TOTAL_RC_CHARGES NUMBER (20,8),
TOTAL_PC_CHARGES NUMBER (20,8),
TOTAL_SC_CHARGES NUMBER (20,8),
PRICE_TO_BASE_FW_EXCH_RATE_ACT NUMBER(20,10),    
PRICE_TO_BASE_FW_EXCH_RATE VARCHAR2(25),    
CONTRACT_QP_FW_EXCH_RATE  VARCHAR2(25),        
CONTRACT_PP_FW_EXCH_RATE  VARCHAR2(25),        
TC_TO_BASE_FW_EXCH_RATE  VARCHAR2(25),        
RC_TO_BASE_FW_EXCH_RATE  VARCHAR2(25),        
PC_TO_BASE_FW_EXCH_RATE  VARCHAR2(25),        
ACCRUAL_TO_BASE_FW_EXCH_RATE  VARCHAR2(50),
PRICE_UNIT_ID VARCHAR2(15),
PRICE_UNIT_CUR_ID VARCHAR2(15),
PRICE_UNIT_CUR_CODE VARCHAR2(30),
PRICE_UNIT_WEIGHT_UNIT_ID VARCHAR2(15),
PRICE_UNIT_WEIGHT_UNIT VARCHAR2(15),
PRICE_UNIT_WEIGHT NUMBER);

ALTER TABLE TMPC_TEMP_M2M_PRE_CHECK ADD(
M2M_REFINING_CHARGE NUMBER (35,5),        
M2M_TREATMENT_CHARGE NUMBER (35,5),        
M2M_RC_FW_EXCH_RATE VARCHAR2(50),
M2M_TC_FW_EXCH_RATE VARCHAR2(50));      

ALTER TABLE MD_M2M_DAILY ADD(
M2M_RC_FW_EXCH_RATE VARCHAR2(50),
M2M_TC_FW_EXCH_RATE VARCHAR2(50));        

ALTER TABLE MD_M2M_DAILY DROP (PENALTY_CHARGE);

ALTER TABLE TMPC_TEMP_M2M_PRE_CHECK ADD(CONC_BASE_PRICE_UNIT_ID_PPU VARCHAR2(15));

ALTER TABLE POUED_ELEMENT_DETAILS ADD(
CONTRACT_RC_FW_EXCH_RATE VARCHAR2(50),
CONTRACT_TC_FW_EXCH_RATE VARCHAR2(50),
M2M_RC_FW_EXCH_RATE VARCHAR2 (50),
M2M_TC_FW_EXCH_RATE VARCHAR2 (50),
M2M_LD_FW_EXCH_RATE VARCHAR2 (50));

ALTER TABLE POUE_PHY_OPEN_UNREAL_ELEMENT ADD(
CONTRACT_PC_FW_EXCH_RATE VARCHAR2(50),
ACCRUAL_TO_BASE_FW_EXCH_RATE VARCHAR2(50));

ALTER TABLE POUED_ELEMENT_DETAILS DROP(
PENALTY_CHARGE,
SC_IN_BASE_CUR,
M2M_PENALTY_CHARGE);

ALTER TABLE CIPDE_CIPD_ELEMENT_PRICE DROP(
QP_PERIOD_FROM_DATE,
QP_PERIOD_TO_DATE,
REFINING_CHARGE,
TREATMENT_CHARGE,
PENALTY_CHARGE);

ALTER TABLE CIPDE_CIPD_ELEMENT_PRICE ADD
(EXCH_RATE_STRING VARCHAR2(100),
PRICE_IN_BASE_PRICE_UNIT_ID NUMBER (25,10));

ALTER TABLE GPD_GMR_CONC_PRICE_DAILY ADD
(EXCH_RATE_STRING VARCHAR2(100),
PRICE_IN_BASE_PRICE_UNIT_ID NUMBER (25,10));

ALTER TABLE PSUE_PHY_STOCK_UNREALIZED_ELE ADD(
PRICE_TO_BASE_FW_EXCH_RATE VARCHAR2(25),
M2M_TO_BASE_FW_EXCH_RATE VARCHAR2(25),
ACCRUAL_TO_BASE_FW_EXCH_RATE VARCHAR2(50),
CONTRACT_PC_FW_EXCH_RATE VARCHAR2(50),
CONTRACT_RC_FW_EXCH_RATE VARCHAR2(50),
CONTRACT_TC_FW_EXCH_RATE VARCHAR2(50));


ALTER TABLE PSUE_ELEMENT_DETAILS ADD(
PRICE_TO_BASE_FW_EXCH_RATE VARCHAR2(25),
M2M_TO_BASE_FW_EXCH_RATE VARCHAR2(25),
M2M_RC_FW_EXCH_RATE VARCHAR2(50),
M2M_TC_FW_EXCH_RATE VARCHAR2(50),
M2M_LD_FW_EXCH_RATE VARCHAR2(50),
CONTRACT_RC_IN_BASE_CUR NUMBER(25,5),
CONTRACT_TC_IN_BASE_CUR NUMBER(25,5),
CONTRACT_RC_FW_EXCH_RATE VARCHAR2(50),        
CONTRACT_TC_FW_EXCH_RATE VARCHAR2(50));        

ALTER TABLE PSUE_PHY_STOCK_UNREALIZED_ELE ADD(
M_PREV_DAY_PNL_PER_BASE_UNIT NUMBER(25,5),
M_PREV_DAY_PNL_IN_BASE_CUR NUMBER(25,5),
M_PNL_IN_PER_BASE_UNIT NUMBER(25,5),
M_PNL_IN_BASE_CUR NUMBER(25,5),
M_TRADE_DAY_PNL_IN_BASE_CUR NUMBER(25,5),
M_TRADE_DAY_PNL_PER_BASE_UNIT NUMBER(25,5));

ALTER TABLE PSUE_PHY_STOCK_UNREALIZED_ELE ADD
(CONTRACT_PC_IN_BASE_CUR NUMBER(25,5) );

ALTER TABLE PSUE_PHY_STOCK_UNREALIZED_ELE ADD(
SC_IN_BASE_CUR NUMBER (25,5));                           

ALTER TABLE PSUE_PHY_STOCK_UNREALIZED_ELE ADD(
CONTRACT_RC_IN_BASE_CUR NUMBER(25,5),
CONTRACT_TC_IN_BASE_CUR NUMBER(25,5));

ALTER TABLE PSUE_PHY_STOCK_UNREALIZED_ELE ADD(
MATERIAL_COST_IN_BASE_CUR number(25,5));

ALTER TABLE PSUE_PHY_STOCK_UNREALIZED_ELE ADD(
CP_ID VARCHAR2(15),
CP_NAME VARCHAR2(100));

ALTER TABLE POUE_PHY_OPEN_UNREAL_ELEMENT ADD(
PRICE_TO_BASE_FW_EXCH_RATE VARCHAR2(50),
M2M_TO_BASE_FW_EXCH_RATE VARCHAR2(50));

ALTER TABLE  PCERC_PC_ELEM_REFINING_CHARGE MODIFY(
RANGE_MIN_VALUE NUMBER(25,10),
RANGE_MAX_VALUE NUMBER(25,10));


ALTER TABLE  PCETC_PC_ELEM_TREATMENT_CHARGE MODIFY(
RANGE_MIN_VALUE NUMBER(25,10),
RANGE_MAX_VALUE NUMBER(25,10));

ALTER TABLE  PCEPC_PC_ELEM_PAYABLE_CONTENT MODIFY(
RANGE_MIN_VALUE NUMBER(25,10),
RANGE_MAX_VALUE NUMBER(25,10));

ALTER TABLE POUE_PHY_OPEN_UNREAL_ELEMENT ADD
(IS_TOLLING_CONTRACT VARCHAR2(1) DEFAULT 'N',
IS_TOLLING_EXTN  VARCHAR2(1) DEFAULT 'N');

ALTER TABLE POUED_ELEMENT_DETAILS ADD
(IS_TOLLING_CONTRACT VARCHAR2(1) DEFAULT 'N',
IS_TOLLING_EXTN  VARCHAR2(1) DEFAULT 'N');

ALTER TABLE psue_element_details ADD
(IS_TOLLING_CONTRACT VARCHAR2(1) DEFAULT 'N',
IS_TOLLING_EXTN  VARCHAR2(1) DEFAULT 'N');


ALTER TABLE psue_phy_stock_unrealized_ele ADD
(IS_TOLLING_CONTRACT VARCHAR2(1) DEFAULT 'N',
IS_TOLLING_EXTN  VARCHAR2(1) DEFAULT 'N');


alter table PRD_PHYSICAL_REALIZED_DAILY add realized_sub_type varchar2(30);

CREATE TABLE SSWH_SPE_SETTLE_WASHOUT_HEADER
(
  SSWH_ID                  VARCHAR2(15 CHAR),
  INTERNAL_ACTION_REF_NO   VARCHAR2(15 CHAR),
  SETTLEMENT_QTY           NUMBER(25,10),
  SETTLEMENT_QTY_UNIT_ID   VARCHAR2(15 CHAR),
  SETTLEMENT_DATE          DATE,
  PURCHASE_AMT             NUMBER(25,10),
  SALE_AMT                 NUMBER(25,10),
  PAY_IN_CURR_ID           VARCHAR2(15 CHAR),
  REMARKS                  VARCHAR2(50 CHAR),
  IS_ACTIVE                CHAR(1 CHAR),
  INTERNAL_GMR_REF_NO      VARCHAR2(15 CHAR),
  PROCESS_ID               VARCHAR2(15 CHAR),
  DBD_ID                   VARCHAR2(15 CHAR),
  ACTIVITY_REF_NO          VARCHAR2(15 BYTE),
  ACTIVITY_TYPE            VARCHAR2(15 BYTE),
  CANCELLATION_DATE        TIMESTAMP(6),
  IS_CANCELLED_PROCESS_ID  CHAR(1 CHAR)
);

CREATE TABLE SSWD_SPE_SETTLE_WASHOUT_DETAIL
(
  SSWD_ID                        VARCHAR2(15 CHAR),
  SSWH_ID                        VARCHAR2(15 CHAR),
  CONTRACT_TYPE                  CHAR(1 CHAR),
  INTERNAL_CONTRACT_ITEM_REF_NO  VARCHAR2(15 CHAR),
  CONTRACT_ITEM_REF_NO           VARCHAR2(30 CHAR),
  PRODUCT_ID                     VARCHAR2(15 CHAR),
  QUALITY_ID                     VARCHAR2(15 CHAR),
  PRICE                          NUMBER(25,10),
  PRICE_UNIT_ID                  VARCHAR2(15 CHAR),
  QTY                            NUMBER(25,10),
  QTY_UNIT_ID                    VARCHAR2(15 CHAR),
  IS_ACTIVE                      CHAR(1 CHAR),
  PROCESS_ID                     VARCHAR2(15 CHAR),
  DBD_ID                         VARCHAR2(15 CHAR),
  PRICE_FIXED                    VARCHAR2(15 BYTE),
  PRICE_TYPE                     VARCHAR2(15 BYTE),
  PRICE_DESC                     VARCHAR2(4000 BYTE)
);

CREATE TABLE ORD_OVERALL_REALIZED_PNL_DAILY
(
  SECTION_NAME                   VARCHAR2(100 CHAR),
  SUB_SECTION_NAME               VARCHAR2(100 CHAR),
  SECTION_ID                     NUMBER(3),
  ORDER_ID                       NUMBER(3),
  COST_CREATED_DATE              DATE,
  PROCESS_ID                     VARCHAR2(100 CHAR),
  EOD_DATE                       DATE,
  CORPORATE_ID                   VARCHAR2(100 CHAR),
  CORPORATE_NAME                 VARCHAR2(100 CHAR),
  BASE_QTY_UNIT                  VARCHAR2(100 CHAR),
  BASE_QTY_UNIT_ID               VARCHAR2(100 CHAR),
  BASE_CUR_ID                    VARCHAR2(100 CHAR),
  BASE_CUR_CODE                  VARCHAR2(100 CHAR),
  BASE_CUR_DECIMALS              NUMBER(2),
  BASE_QTY_DECIMALS              NUMBER(2),
  PROFIT_CENTER_ID               VARCHAR2(100 CHAR),
  PROFIT_CENTER_NAME             VARCHAR2(100 CHAR),
  PROFIT_CENTER_SHORT_NAME       VARCHAR2(100 CHAR),
  CUSTOMER_ID                    VARCHAR2(100 CHAR),
  CUSTOMER_NAME                  VARCHAR2(100 CHAR),
  JOURNAL_TYPE                   VARCHAR2(100 CHAR),
  REALIZATION_DATE               DATE,
  TRANSACTION_REF_NO             VARCHAR2(100 CHAR),
  CONTRACT_REF_NO                VARCHAR2(100 CHAR),
  CONTRACT_DETAILS               VARCHAR2(1000 CHAR),
  COST_ID                        VARCHAR2(100 CHAR),
  COST_NAME                      VARCHAR2(100 CHAR),
  PRICE_FIXATION_STATUS          VARCHAR2(100 CHAR),
  CURRENT_QTY                    NUMBER(20,5),
  QTY_IN_UNITS                   NUMBER(20,5),
  CURRENT_AMOUNT                 NUMBER(25,5),
  PREVIOUS_REALIZED_QTY          NUMBER(20,5),
  PREVIOUS_REALIZED_AMOUNT       NUMBER(25,5),
  COST_MONTH                     DATE,
  TRANSACT_CUR_ID                VARCHAR2(100 CHAR),
  TRANSACT_CUR_CODE              VARCHAR2(100 CHAR),
  TRANSACT_CUR_DECIMALS          NUMBER(2),
  TRANSACT_AMT                   NUMBER(25,5),
  INTERNAL_CONTRACT_ITEM_REF_NO  VARCHAR2(100 CHAR),
  INT_ALLOC_GROUP_ID             VARCHAR2(100 CHAR),
  INTERNAL_STOCK_REF_NO          VARCHAR2(100 CHAR)
);

alter table IS_INVOICE_SUMMARY add is_invoice_new VARCHAR2 (1 Char);

CREATE TABLE ISR_INTRASTAT_GRD
(
  CORPORATE_ID                VARCHAR2(15),
  PROCESS_ID                  VARCHAR2(15),
  EOD_TRADE_DATE              DATE,
  CONTRACT_REF_NO             VARCHAR2(15),
  CONTRACT_ITEM_REF_NO        VARCHAR2(15),
  GMR_REF_NO                  VARCHAR2(15),
  INTERNAL_GMR_REF_NO         VARCHAR2(15),
  INTERNAL_GRD_REF_NO         VARCHAR2(15),
  PRODUCT_ID                  VARCHAR2(15),
  PRODUCT_NAME                VARCHAR2(50),
  CP_ID                       VARCHAR2(15),
  COUNTERPARTY_NAME           VARCHAR2(50),
  QUALITY_ID                  VARCHAR2(15),
  QUALITY_NAME                VARCHAR2(50),
  QTY                         NUMBER(25,10),
  QTY_UNIT_ID                 VARCHAR2(15),
  PRICE                       NUMBER(25,10),
  PRICE_UNIT_ID               VARCHAR2(20),
  PRICE_UNIT_NAME             VARCHAR2(15),
  SHIPMENT_DATE               DATE,
  LOADING_COUNTRY_ID          VARCHAR2(15),
  LOADING_COUNTRY_NAME        VARCHAR2(50),
  LOADING_CITY_ID             VARCHAR2(15),
  LOADING_CITY_NAME           VARCHAR2(50),
  LOADING_STATE_ID            VARCHAR2(15),
  LOADING_STATE_NAME          VARCHAR2(50),
  LOADING_REGION_ID           VARCHAR2(15),
  LOADING_REGION_NAME         VARCHAR2(50),
  DISCHARGE_COUNTRY_ID        VARCHAR2(15),
  DISCHARGE_COUNTRY_NAME      VARCHAR2(50),
  DISCHARGE_CITY_ID           VARCHAR2(15),
  DISCHARGE_CITY_NAME         VARCHAR2(50),
  DISCHARGE_STATE_ID          VARCHAR2(15),
  DISCHARGE_STATE_NAME        VARCHAR2(50),
  DISCHARGE_REGION_ID         VARCHAR2(15),
  DISCHARGE_REGION_NAME       VARCHAR2(50),
  MODE_OF_TRANSPORT           VARCHAR2(15),
  ARRIVAL_NO                  VARCHAR2(15),
  VAT_NO                      VARCHAR2(15),
  INVOICE_DATE                VARCHAR2(15),
  INVOICE_INVENOTRY_STATUS    VARCHAR2(15),
  INVOICE_INVENOTRY_VALUE     NUMBER(25,5),
  INVOICE_INVENOTRY_CUR_ID    VARCHAR2(15),
  INVOICE_INVENOTRY_CUR_CODE  VARCHAR2(15),
  LOADING_COUNTRY_CUR_ID      VARCHAR2(15),
  LOADING_COUNTRY_CUR_CODE    VARCHAR2(15),
  DISCHARGE_COUNTRY_CUR_ID    VARCHAR2(15),
  DISCHARGE_COUNTRY_CUR_CODE  VARCHAR2(15),
  BASE_CUR_ID                 VARCHAR2(15),
  BASE_CUR_CODE               VARCHAR2(15),
  EX_RATE_TO_BASE             NUMBER(25,10),
  EX_RATE_BASE_TO_NAT_LOAD    NUMBER(25,10),
  EX_RATE_BASE_TO_NAT_DIS     NUMBER(25,10),
  COMB_NOME_ITEM_CODE         VARCHAR2(20),
  CONTRACT_TYPE               VARCHAR2(20)
);


CREATE TABLE PCS_PURCHASE_CONTRACT_STATUS
(
  CORPORATE_ID                VARCHAR2(15),
  CORPORATE_NAME              VARCHAR2(15),
  PROCESS_ID                  VARCHAR2(15),
  EOD_TRADE_DATE              DATE,
  CONTRACT_REF_NO             VARCHAR2(15),
  PRODUCT_ID                  VARCHAR2(15),
  PRODUCT_NAME                VARCHAR2(50),
  CP_ID                       VARCHAR2(15),
  CP_NAME                     VARCHAR2(20),
  CONTRACT_STATUS             VARCHAR2(20),
  INVOICE_PAY_IN_CUR          VARCHAR2(10),
  INVOICE_PAY_IN_CUR_CODE     VARCHAR2(15),
  ELEMENT_ID                  VARCHAR2(15),
  ELEMENT_NAME                VARCHAR2(15),
  PAYABLE_QTY                 NUMBER(25,5),
  PAYABLE_QTY_UNIT_ID         VARCHAR2(15),
  PAYABLE_QTY_UNIT_NAME       VARCHAR2(15),
  PRICED_ARRIVED_QTY          NUMBER(25,5),
  PRICED_NOT_ARRIVED_QTY      NUMBER(25,5),
  UNPRICED_ARRIVED_QTY       NUMBER(25,5),
  UNPRICED_NOT_ARRIVED_QTY   NUMBER(25,5)
);




CREATE TABLE CPE_CORP_PAYBLE_ELEMENT
(CORPORATE_ID   VARCHAR2(15),
 ELEMENT_ID     VARCHAR2(15),
 ELEMENT_NAME   VARCHAR2(50),
 ORDER_ID       NUMBER(10)
);
 

 
CREATE TABLE CPE_CORP_PENALITY_ELEMENT
 (CORPORATE_ID   VARCHAR2(15),
 ELEMENT_ID     VARCHAR2(15),
 ELEMENT_NAME   VARCHAR2(50),
 ORDER_ID       NUMBER(10)
);

CREATE TABLE FCR_FEED_CONSUMPTION_REPORT
(
  PROCESS_ID        VARCHAR2(15),
  EOD_TRADE_DATE    DATE,
  CORPORATE_ID      VARCHAR2(15),
  CORPORATE_NAME    VARCHAR2(15),
  GMR_REF_NO        VARCHAR2(15),
  PRODUCT_ID        VARCHAR2(15),
  PRODUCT_NAME      VARCHAR2(50),
  QUALITY_ID        VARCHAR2(15),
  QUALITY_NAME      VARCHAR2(50),
  CP_ID             VARCHAR2(15),
  CP_NAME           VARCHAR2(15),
  ELEMENT_ID        VARCHAR2(15),
  ELEMENT_NAME      VARCHAR2(15),
  GMR_QTY           NUMBER(25,5),
  GMR_QTY_UNIT_ID   VARCHAR2(15),
  GMR_QTY_UNIT      VARCHAR2(15),
  ASSAY_QTY         NUMBER(25,5),
  ASAAY_QTY_UNIT_ID VARCHAR2(15),
  ASAAY_QTY_UNIT    VARCHAR2(15),
  PAYABLE_QTY       VARCHAR2(15),
  PAYABLE_QTY_UNIT_ID VARCHAR2(15),
  PAYABLE_QTY_UNIT  VARCHAR2(15),
  TC_AMOUNT         NUMBER(25,5),
  RC_AMOUNT         NUMBER(25,5),
  PENALITY_AMOUNT   NUMBER(25,5),
  INV_ADD_CHARGES   NUMBER(25,5),
  INVOICE_CUR_ID    VARCHAR2(15),
  INVOICE_CUR_CODE  VARCHAR2(15),
  BASE_CUR_ID       VARCHAR2(15),
  BASE_CUR_CODE     VARCHAR2(15)
);

CREATE TABLE STOCK_MONTHLY_YEILD_DATA
(
  CORPORATE_ID          VARCHAR2(15),
  CORPORATE_NAME        VARCHAR2(20),
  PROCESS_ID            VARCHAR2(15),
  INTERNAL_GMR_REF_NO   VARCHAR2(15),
  GMR_REF_NO            VARCHAR2(30),
  ELEMENT_ID            VARCHAR2(15),
  CP_ID                 VARCHAR2(20),
  TOTAL_QTY_IN_WET      NUMBER,
  TOTAL_QTY_IN_DRY      NUMBER,
  UNIT_OF_MEASURE       VARCHAR2(15),
  AVG_TYPICAL           NUMBER,
  YIELD_PCT             NUMBER(5,2),
  CURRENT_QTY           NUMBER(20,5),
  QTY_UNIT_ID           VARCHAR2(15),
  YTD_YEAR              VARCHAR2(4),
  YTD_MONTH             VARCHAR2(3),
  YTD_GROUP_COLUMN      DATE,
  ELEMENT_NAME          VARCHAR2(30),
  ELEMENT_PRODUCT_ID    VARCHAR2(15),
  ELEMENT_PRODUCT_NAME  VARCHAR2(200),
  CONC_PRODUCT_ID       VARCHAR2(15),
  CONC_QTY_UNIT_ID      VARCHAR2(30),
  CONC_QTY_UNIT         VARCHAR2(15)
);


declare
begin
 for cc in (select *
               from ak_corporate akc)
  loop  
  
insert into  cpe_corp_payble_element(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-166','Cu',1);
insert into  cpe_corp_payble_element(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-241','Au',2);
insert into  cpe_corp_payble_element(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-242','Ag',3);  
insert into  cpe_corp_payble_element(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-167','Zn',4);
insert into  cpe_corp_payble_element(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-168','Pb',5);
insert into  cpe_corp_payble_element(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-193','Mo',6);
insert into  cpe_corp_payble_element(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-288','Coal',7);
end loop;
commit;
end;
/
declare
begin
 for cc in (select *
               from ak_corporate akc)
  loop  
insert into  CPE_CORP_PENALITY_ELEMENT(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-172','Sb',1);
insert into  CPE_CORP_PENALITY_ELEMENT(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-173','As',2);
insert into  CPE_CORP_PENALITY_ELEMENT(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-187','Cl',3);
insert into  CPE_CORP_PENALITY_ELEMENT(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-203','Hg',4);
insert into  CPE_CORP_PENALITY_ELEMENT(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-170','Bi',5);
insert into  CPE_CORP_PENALITY_ELEMENT(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-169','Al',6);
insert into  CPE_CORP_PENALITY_ELEMENT(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-188','F',7);
insert into  CPE_CORP_PENALITY_ELEMENT(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-197','Si',8);
insert into  CPE_CORP_PENALITY_ELEMENT(CORPORATE_ID,ELEMENT_ID,ELEMENT_NAME,ORDER_ID)values(cc.corporate_id,'AML-207','H2O',9);
end loop;
commit;
end;
/

CREATE MATERIALIZED VIEW  AGMR_ACTION_GMR  REFRESH FAST ON DEMAND WITH PRIMARY KEY AS  SELECT * FROM  AGMR_ACTION_GMR@eka_appdb;
CREATE MATERIALIZED VIEW  REM_REGION_MASTER  REFRESH FAST ON DEMAND WITH PRIMARY KEY AS  SELECT * FROM  REM_REGION_MASTER@eka_appdb;
CREATE MATERIALIZED VIEW  BVD_BP_VAT_DETAILS  REFRESH FAST ON DEMAND WITH PRIMARY KEY AS  SELECT * FROM  BVD_BP_VAT_DETAILS@eka_appdb;
CREATE MATERIALIZED VIEW  IOC_INVOICE_OTHER_CHARGE  REFRESH FAST ON DEMAND WITH PRIMARY KEY AS  SELECT * FROM  IOC_INVOICE_OTHER_CHARGE@eka_appdb;
CREATE MATERIALIZED VIEW  YPD_YIELD_PCT_DETAIL  REFRESH FAST ON DEMAND WITH PRIMARY KEY AS  SELECT * FROM  YPD_YIELD_PCT_DETAIL@eka_appdb;
  
 
 


