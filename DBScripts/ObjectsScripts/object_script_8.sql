ALTER TABLE IAM_INVOICE_ASSAY_MAPPING
RENAME COLUMN ASM_PK TO ASH_ID;


ALTER TABLE IAM_INVOICE_ASSAY_MAPPING
 ADD (IAM_ID  VARCHAR2(15 BYTE) NOT NULL);

ALTER TABLE IAM_INVOICE_ASSAY_MAPPING
 ADD CONSTRAINT IAM_INVOICE_ASSAY_MAPPING_PK
 PRIMARY KEY
 (IAM_ID);

CREATE SEQUENCE SEQ_IASM
  START WITH 1
  MAXVALUE 1000000000000000000000000000
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE TABLE INTC_INV_TREATMENT_CHARGES
(
  INTERNAL_INVOICE_REF_NO        VARCHAR2(15 BYTE) NOT NULL,
  GRD_ID                         VARCHAR2(15 BYTE) NOT NULL,
  TCHARGES_AMOUNT                NUMBER(38,18),
  TCHARGES_PRICE                 NUMBER(38,18),
  TCHARGES_PRICE_UNIT_ID         VARCHAR2(15 BYTE),
  SUB_LOT_NO                     VARCHAR2(15 BYTE),
  LOT_QTY                        NUMBER(38,18),
  LOT_QTY_UNIT_ID                VARCHAR2(15 BYTE)
);


CREATE UNIQUE INDEX INTC_PK ON INTC_INV_TREATMENT_CHARGES
(INTERNAL_INVOICE_REF_NO, GRD_ID);


ALTER TABLE INTC_INV_TREATMENT_CHARGES ADD (
  CONSTRAINT INTC_PK
 PRIMARY KEY
 (INTERNAL_INVOICE_REF_NO, GRD_ID));

ALTER TABLE INTC_INV_TREATMENT_CHARGES ADD (
  CONSTRAINT INTC_IS_FK 
 FOREIGN KEY (INTERNAL_INVOICE_REF_NO) 
 REFERENCES IS_INVOICE_SUMMARY (INTERNAL_INVOICE_REF_NO));



CREATE TABLE INRC_INV_REFINING_CHARGES
(
  INTERNAL_INVOICE_REF_NO        VARCHAR2(15 BYTE) NOT NULL,
  GRD_ID                         VARCHAR2(15 BYTE) NOT NULL,
  RCHARGES_AMOUNT                NUMBER(38,18),
  RCHARGES_PRICE                 NUMBER(38,18),
  RCHARGES_PRICE_UNIT_ID         VARCHAR2(15 BYTE),
  SUB_LOT_NO                     VARCHAR2(15 BYTE),
  LOT_QTY                        NUMBER(38,18),
  LOT_QTY_UNIT_ID                VARCHAR2(15 BYTE)
);


CREATE UNIQUE INDEX INRC_PK ON INRC_INV_REFINING_CHARGES
(INTERNAL_INVOICE_REF_NO, GRD_ID);


ALTER TABLE INRC_INV_REFINING_CHARGES ADD (
  CONSTRAINT INRC_PK
 PRIMARY KEY
 (INTERNAL_INVOICE_REF_NO, GRD_ID));

ALTER TABLE INRC_INV_REFINING_CHARGES ADD (
  CONSTRAINT INRC_IS_FK 
 FOREIGN KEY (INTERNAL_INVOICE_REF_NO) 
 REFERENCES IS_INVOICE_SUMMARY (INTERNAL_INVOICE_REF_NO));
