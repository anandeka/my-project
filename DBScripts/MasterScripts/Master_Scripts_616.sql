DECLARE fetchQueryCONDraftSIChild CLOB :='INSERT INTO IS_CHILD_SI_D(
INTERNAL_INVOICE_REF_NO,
GMR_REF_NO,
COST_COMPONENT_NAME,
INVOICE_AMOUNT,
INVOICE_AMOUNT_UNIT,
INV_AMT_IN_INV_CUR,
INVOICE_CURRENCY,
INV_TO_ACCRUAL_FX_RATE,
COST_DESCRIPTION,
INTERNAL_DOC_REF_NO
)
select
INVS.INTERNAL_INVOICE_REF_NO as INTERNAL_INVOICE_REF_NO,
GMR.GMR_REF_NO as GMR_REF_NO,
SCM.COST_COMPONENT_NAME as COST_COMPONENT_NAME,
DCS.INV_AMT_IN_ACCRUAL_CUR as INVOICE_AMOUNT,
CM1.CUR_CODE as INVOICE_AMOUNT_UNIT,
DCS.INV_AMT_IN_INV_CUR as INV_AMT_IN_INV_CUR,
CM2.CUR_CODE as INVOICE_CURRENCY,
DCS.FX_TO_ACCRUAL as INV_TO_ACCRUAL_FX_RATE, DCS.COST_DESCRIPTION as COST_DESCRIPTION, ?
from
IS_INVOICE_SUMMARY invs,
IAM_INVOICE_ACTION_MAPPING iam,
DCS_DRAFT_COST_STORE dcs,
SIGM_SERVICE_INV_GMR_MAPPING SIGM,
GMR_GOODS_MOVEMENT_RECORD gmr,
SCM_SERVICE_CHARGE_MASTER scm,
CM_CURRENCY_MASTER cm1,
CM_CURRENCY_MASTER cm2
where
INVS.INTERNAL_INVOICE_REF_NO = IAM.INTERNAL_INVOICE_REF_NO
and IAM.INVOICE_ACTION_REF_NO = DCS.INT_ACTION_REF_NO
AND IAM.INTERNAL_INVOICE_REF_NO = SIGM.INTERNAL_INV_REF_NO
and SIGM.INTERNAL_GMR_REF_NO = GMR.INTERNAL_GMR_REF_NO
and DCS.COST_COMPONENT_ID = SCM.COST_ID
AND DCS.INTERNAL_GMR_REF_NO = SIGM.INTERNAL_GMR_REF_NO
and CM1.CUR_ID(+) = DCS.ACCRUAL_CUR_ID
AND CM2.CUR_ID(+) =  DCS.INVOICE_CURRENCY
and INVS.INVOICE_TYPE = ''Service''
and INVS.INTERNAL_INVOICE_REF_NO = ?';

fetchQueryISDForSI CLOB :='INSERT INTO IS_D(
INVOICE_REF_NO,
INVOICE_TYPE_NAME,
INVOICE_CREATION_DATE,
INVOICE_QUANTITY,
INVOICED_QTY_UNIT,
INTERNAL_INVOICE_REF_NO,
INVOICE_AMOUNT,
MATERIAL_COST,
ADDDITIONAL_CHARGES,
TAXES,
DUE_DATE,
SUPPLIRE_INVOICE_NO,
CONTRACT_DATE,
CONTRACT_REF_NO,
STOCK_QUANTITY,
STOCK_REF_NO,
INVOICE_AMOUNT_UNIT,
GMR_REF_NO,
GMR_QUALITY,
CONTRACT_QUANTITY,
CONTRACT_QTY_UNIT,
CONTRACT_TOLERANCE,
QUALITY,
PRODUCT,
CP_CONTRACT_REF_NO,
PAYMENT_TERM,
GMR_FINALIZE_QTY,
CP_NAME,
CP_ADDRESS,
CP_COUNTRY,
CP_CITY,
CP_STATE,
CP_ZIP,
CONTRACT_TYPE,
ORIGIN,
INCO_TERM_LOCATION,
NOTIFY_PARTY,
SALES_PURCHASE,
INVOICE_STATUS,
IS_INV_DRAFT,
INTERNAL_DOC_REF_NO
)
select
INVS.INVOICE_REF_NO as INVOICE_REF_NO,
INVS.INVOICE_TYPE_NAME as INVOICE_TYPE_NAME,
INVS.INVOICE_ISSUE_DATE as INVOICE_CREATION_DATE,
INVS.INVOICED_QTY as INVOICE_QUANTITY,
QUM_GMR.QTY_UNIT as INVOICED_QTY_UNIT,
INVS.INTERNAL_INVOICE_REF_NO as INTERNAL_INVOICE_REF_NO,
INVS.TOTAL_AMOUNT_TO_PAY as INVOICE_AMOUNT,
INVS.AMOUNT_TO_PAY_BEFORE_ADJ as MATERIAL_COST,
INVS.TOTAL_OTHER_CHARGE_AMOUNT as ADDDITIONAL_CHARGES,
INVS.TOTAL_TAX_AMOUNT as TAXES,
INVS.PAYMENT_DUE_DATE as DUE_DATE,
INVS.CP_REF_NO as SUPPLIER_INVOICE_NO,
'''' as CONTRACT_DATE,
stragg(PCM.CONTRACT_REF_NO) as CONTRACT_REF_NO,
sum(GMR.QTY) as STOCK_QUANTITY,
'''' as STOCK_REF_NO,
CM.CUR_CODE as INVOICE_AMOUNT_UNIT,
stragg(GMR.GMR_REF_NO) as GMR_REF_NO,
sum(GMR.QTY) as GMR_QUALITY,
sum(PCPD.QTY_MAX_VAL) as CONTRACT_QUANTITY,
QUM.QTY_UNIT as CONTRACT_QTY_UNIT,
stragg(PCPD.MAX_TOLERANCE) as CONTRACT_TOLERANCE,
stragg(QAT.QUALITY_NAME) as QUALITY,
stragg(PDM.PRODUCT_DESC) as PRODUCT,
stragg(PCM.CP_CONTRACT_REF_NO) as CP_CONTRACT_REF_NO,
stragg(PYM.PAYMENT_TERM) as PAYMENT_TERM,
sum(GMR.FINAL_WEIGHT) as GMR_FINALIZE_QTY,
stragg(PHD.COMPANYNAME) as CP_NAME,
stragg(PAD.ADDRESS) as CP_ADDRESS,
stragg(CYM.COUNTRY_NAME) as CP_COUNTRY,
stragg(CIM.CITY_NAME) as CP_CITY,
stragg(SM.STATE_NAME) as CP_STATE,
stragg(PAD.ZIP) as CP_ZIP,
stragg(distinct PCM.CONTRACT_TYPE) as CONTRACT_TYPE,
stragg(CYMLOADING.COUNTRY_NAME) as ORIGIN,
stragg(PCI.TERMS) as INCO_TERM_LOCATION,
stragg(nvl(PHD1.COMPANYNAME, PHD2.COMPANYNAME)) as NOTIFY_PARTY, 
stragg(distinct PCI.CONTRACT_TYPE) as SALES_PURCHASE,
INVS.INVOICE_STATUS as INVOICE_STATUS,
INVS.IS_INV_DRAFT as IS_INV_DRAFT,
?
from 
IS_INVOICE_SUMMARY invs,
PCM_PHYSICAL_CONTRACT_MAIN pcm,
V_PCI pci,
CM_CURRENCY_MASTER cm,
GMR_GOODS_MOVEMENT_RECORD gmr,
PCPD_PC_PRODUCT_DEFINITION pcpd,
QUM_QUANTITY_UNIT_MASTER qum,
PCPQ_PC_PRODUCT_QUALITY pcpq,
QAT_QUALITY_ATTRIBUTES qat,
PDM_PRODUCTMASTER pdm,
PHD_PROFILEHEADERDETAILS phd,
PYM_PAYMENT_TERMS_MASTER pym,
PAD_PROFILE_ADDRESSES pad,
CYM_COUNTRYMASTER cym,
CIM_CITYMASTER cim,
SM_STATE_MASTER sm,
BPAT_BP_ADDRESS_TYPE bpat,
CYM_COUNTRYMASTER cymloading,
SAD_SHIPMENT_ADVICE sad,
SD_SHIPMENT_DETAIL sd,
PHD_PROFILEHEADERDETAILS phd1,
PHD_PROFILEHEADERDETAILS phd2,
QUM_QUANTITY_UNIT_MASTER qum_gmr,
SIGM_SERVICE_INV_GMR_MAPPING SIGM,
GCIM_GMR_CONTRACT_ITEM_MAPPING GCIM
where
INVS.INTERNAL_INVOICE_REF_NO = SIGM.INTERNAL_INV_REF_NO
AND SIGM.IS_ACTIVE = ''Y''
AND SIGM.INTERNAL_GMR_REF_NO = GMR.INTERNAL_GMR_REF_NO
AND GMR.INTERNAL_GMR_REF_NO = GCIM.INTERNAL_GMR_REF_NO
and GCIM.INTERNAL_CONTRACT_ITEM_REF_NO = PCI.INTERNAL_CONTRACT_ITEM_REF_NO
and GMR.INTERNAL_CONTRACT_REF_NO = PCM.INTERNAL_CONTRACT_REF_NO
and PCM.INVOICE_CURRENCY_ID = CM.CUR_ID
and PCM.INTERNAL_CONTRACT_REF_NO = PCPD.INTERNAL_CONTRACT_REF_NO
and PCPD.QTY_UNIT_ID = QUM.QTY_UNIT_ID
and PCPD.PCPD_ID = PCPQ.PCPD_ID
and PCI.QUALITY_ID = QAT.QUALITY_ID
and PCPQ.QUALITY_TEMPLATE_ID = QAT.QUALITY_ID
and PCPD.PRODUCT_ID = PDM.PRODUCT_ID
and PCM.CP_ID = PHD.PROFILEID
and PCM.PAYMENT_TERM_ID = PYM.PAYMENT_TERM_ID
and PHD.PROFILEID = PAD.PROFILE_ID
and PAD.COUNTRY_ID = CYM.COUNTRY_ID
and PAD.CITY_ID = CIM.CITY_ID(+)
and PAD.STATE_ID = SM.STATE_ID(+)
and PAD.ADDRESS_TYPE = BPAT.BP_ADDRESS_TYPE_ID(+)
AND PAD.ADDRESS_TYPE(+) = ''Billing''
and CYMLOADING.COUNTRY_ID(+) = GMR.LOADING_COUNTRY_ID
and GMR.INTERNAL_GMR_REF_NO = SAD.INTERNAL_GMR_REF_NO(+)
and GMR.INTERNAL_GMR_REF_NO = SD.INTERNAL_GMR_REF_NO(+)
and SAD.CONSIGNEE_ID = PHD1.PROFILEID(+)
and SD.CONSIGNEE_ID = PHD2.PROFILEID(+)
and GMR.QTY_UNIT_ID = QUM_GMR.QTY_UNIT_ID(+)
and PAD.IS_DELETED = ''N''
and INVS.INTERNAL_INVOICE_REF_NO = ?
group by
INVS.INVOICE_REF_NO,
INVS.INVOICE_TYPE_NAME,
INVS.INVOICE_ISSUE_DATE,
INVS.INVOICED_QTY,
INVS.INTERNAL_INVOICE_REF_NO,
INVS.TOTAL_AMOUNT_TO_PAY,
INVS.TOTAL_OTHER_CHARGE_AMOUNT,
INVS.TOTAL_TAX_AMOUNT,
INVS.PAYMENT_DUE_DATE,
INVS.CP_REF_NO,
CM.CUR_CODE,
QUM.QTY_UNIT,
QUM_GMR.QTY_UNIT,
INVS.AMOUNT_TO_PAY_BEFORE_ADJ,
INVS.INVOICE_STATUS, 
INVS.IS_INV_DRAFT';

BEGIN
UPDATE DGM_DOCUMENT_GENERATION_MASTER DGM SET DGM.FETCH_QUERY=fetchQueryCONDraftSIChild WHERE DGM.DGM_ID IN ('DGM-DFT-SIC-1','DGM-DFT-SI-1') AND DGM.DOC_ID='CREATE_DFT_SI' AND DGM.SEQUENCE_ORDER=2;

UPDATE DGM_DOCUMENT_GENERATION_MASTER DGM SET DGM.FETCH_QUERY=fetchQueryISDForSI WHERE DGM.DGM_ID IN ('DGM-SIC','DGM-SI','DGM-DFT-SI','DGM-DFT-SIC') AND DGM.DOC_ID IN ('CREATE_DFT_SI','CREATE_SI') AND DGM.SEQUENCE_ORDER=1;
COMMIT;
END;